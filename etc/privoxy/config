#         Configuration File for Privoxy 3.0.32
# Copyright (C) 2001-2021 Privoxy Developers https://www.privoxy.org/
#####################################################################
#                                                                   #
#                      Table of Contents                            #
#                                                                   #
#        1. LOCAL SET-UP DOCUMENTATION                              #
#        2. CONFIGURATION AND LOG FILE LOCATIONS                    #
#        3. DEBUGGING                                               #
#        4. ACCESS CONTROL AND SECURITY                             #
#        5. FORWARDING                                              #
#        6. MISCELLANEOUS                                           #
#        7. HTTPS INSPECTION (EXPERIMENTAL)                         #
#        8. WINDOWS GUI OPTIONS                                     #
#                                                                   #
#####################################################################
#
#  1.1. user-manual
#  =================
#  Specifies:
#      Location of the Privoxy User Manual.
#
#  Type of value:
#      A fully qualified URI
#
#  Default value:
#      Unset
#
#  Effect if unset:
#      https://www.privoxy.org/version/user-manual/ will be used,
#      where version is the Privoxy version.
#
#  Notes:
#      The User Manual URI is the single best source of information
#      on Privoxy, and is used for help links from some of the
#      internal CGI pages. The manual itself is normally packaged
#      with the binary distributions, so you probably want to set
#      this to a locally installed copy.
#
#      Examples:
#      The best all purpose solution is simply to put the full local
#      PATH to where the User Manual is located:
#
#        user-manual  /usr/share/doc/privoxy/user-manual
#
#      The User Manual is then available to anyone with access to
#      Privoxy, by following the built-in URL: http://
#      config.privoxy.org/user-manual/ (or the shortcut: http://p.p/
#      user-manual/).
#
#      If the documentation is not on the local system, it can be
#      accessed from a remote server, as:
#
#        user-manual  http://example.com/privoxy/user-manual/
#
#      WARNING!!!
#          If set, this option should be the first option in the
#          config file, because it is used while the config file is
#          being read.
#
user-manual /home/sindri/share/doc/privoxy/user-manual/
#
#  1.4. proxy-info-url
#  ====================
#  Specifies:
#      A URL to documentation about the local Privoxy setup,
#      configuration or policies.
#
#  Type of value:
#      URL
#
#  Default value:
#      Unset
#
#  Effect if unset:
#      No link to local documentation is displayed on error pages and
#      the CGI user interface.
#
#  Notes:
#      If both admin-address and proxy-info-url are unset, the whole
#      "Local Privoxy Support" box on all generated pages will not be
#      shown.
#      This URL shouldn't be blocked ;-)
#
proxy-info-url http://proxy.evlis.org/proxy-service.html
#
#  2. CONFIGURATION AND LOG FILE LOCATIONS
#  ========================================
#  Privoxy can (and normally does) use a number of other files for
#  additional configuration, help and logging. This section of the
#  configuration file tells Privoxy where to find those other files.
#
#  The user running Privoxy, must have read permission for all
#  configuration files, and write permission to any files that would
#  be modified, such as log files and actions files.
#
#  2.1. confdir
#  =============
#
#  Specifies:
#      The directory where the other configuration files are located.
#
#  Type of value:
#      Path name
#
#  Default value:
#      /etc/privoxy (Unix) or Privoxy installation dir (Windows)
#
#  Effect if unset:
#      Mandatory
#
#  Notes:
#      No trailing "/", please.
#
confdir /home/sindri/etc
#
#  2.4. logdir
#  ============
#
#  Specifies:
#      The directory where all logging takes place (i.e. where the
#      logfile is located).
#
#  Type of value:
#      Path name
#
#  Default value:
#      /var/log/privoxy (Unix) or Privoxy installation dir (Windows)
#
#  Effect if unset:
#      Mandatory
#
#  Notes:
#      No trailing "/", please.
#
logdir /home/sindri/var/log/privoxy
#
#  2.5. actionsfile
#  =================
#
#  Specifies:
#      The actions file(s) to use
#
#  Type of value:
#      Complete file name, relative to confdir
#
#  Default values:
#        match-all.action # Actions that are applied to all sites and maybe overruled later on.
#        default.action   # Main actions file
#        user.action      # User customizations
#
#  Effect if unset:
#      No actions are taken at all. More or less neutral proxying.
#
#  Notes:
#      Multiple actionsfile lines are permitted, and are in fact
#      recommended!
#
#      The default values are default.action, which is the "main"
#      actions file maintained by the developers, and user.action,
#      where you can make your personal additions.
#
#      Actions files contain all the per site and per URL
#      configuration for ad blocking, cookie management, privacy
#      considerations, etc.
#
actionsfile match-all.action # Actions that are applied to all sites and maybe overruled later on.
actionsfile default.action   # Main actions file
actionsfile user.action      # User customizations
#actionsfile regression-tests.action     # Tests for privoxy-regression-test
#
#  2.6. filterfile
#  ================
#
#  Specifies:
#      The filter file(s) to use
#
#  Type of value:
#      File name, relative to confdir
#
#  Default value:
#      default.filter (Unix) or default.filter.txt (Windows)
#
#  Effect if unset:
#      No textual content filtering takes place, i.e. all +filter{name}
#      actions in the actions files are turned neutral.
#
#  Notes:
#      Multiple filterfile lines are permitted.
#
#      The filter files contain content modification rules that use
#      regular expressions. These rules permit powerful changes on
#      the content of Web pages, and optionally the headers as well,
#      e.g., you could try to disable your favorite JavaScript
#      annoyances, re-write the actual displayed text, or just have
#      some fun playing buzzword bingo with web pages.
#
#      The +filter{name} actions rely on the relevant filter (name)
#      to be defined in a filter file!
#
#      A pre-defined filter file called default.filter that contains
#      a number of useful filters for common problems is included in
#      the distribution. See the section on the filter action for a
#      list.
#
#      It is recommended to place any locally adapted filters into a
#      separate file, such as user.filter.
#
filterfile default.filter
filterfile user.filter      # User customizations
#
#  2.7. logfile
#  =============
#
#  Specifies:
#      The log file to use
#
#  Type of value:
#      File name, relative to logdir
#
#  Default value:
#      Unset (commented out). When activated: logfile (Unix) or
#      privoxy.log (Windows).
#
#  Effect if unset:
#      No logfile is written.
#
#  Notes:
#      The logfile is where all logging and error messages are
#      written. The level of detail and number of messages are set
#      with the debug option (see below). The logfile can be useful
#      for tracking down a problem with Privoxy (e.g., it's not
#      blocking an ad you think it should block) and it can help you
#      to monitor what your browser is doing.
#
#      Depending on the debug options below, the logfile may be a
#      privacy risk if third parties can get access to it. As most
#      users will never look at it, Privoxy only logs fatal errors by
#      default.
#
#      For most troubleshooting purposes, you will have to change
#      that, please refer to the debugging section for details.
#
#      Any log files must be writable by whatever user Privoxy is
#      being run as (on Unix, default user id is "privoxy").
#
#      To prevent the logfile from growing indefinitely, it is
#      recommended to periodically rotate or shorten it. Many
#      operating systems support log rotation out of the box, some
#      require additional software to do it. For details, please
#      refer to the documentation for your operating system.
#
logfile logfile
#
#  3.2. single-threaded
#  =====================
#
#  Specifies:
#      Whether to run only one server thread.
#
#  Type of value:
#      1 or 0
#
#  Default value:
#      0
#
#  Effect if unset:
#      Multi-threaded (or, where unavailable: forked) operation, i.e.
#      the ability to serve multiple requests simultaneously.
#
#  Notes:
#      This option is only there for debugging purposes. It will
#      drastically reduce performance.
#
#single-threaded 1
#
#  3.3. hostname
#  ==============
#
#  Specifies:
#      The hostname shown on the CGI pages.
#
#  Type of value:
#      Text
#
#  Default value:
#      Unset
#
#  Effect if unset:
#      The hostname provided by the operating system is used.
#
#  Notes:
#      On some misconfigured systems resolving the hostname fails or
#      takes too much time and slows Privoxy down. Setting a fixed
#      hostname works around the problem.
#
#      In other circumstances it might be desirable to show a
#      hostname other than the one returned by the operating system.
#      For example if the system has several different hostnames and
#      you don't want to use the first one.
#
#      Note that Privoxy does not validate the specified hostname
#      value.
#
hostname proxy.evlis.org
#
#  4.1. listen-address
#  ====================
#
#  Specifies:
#      The address and TCP port on which Privoxy will listen for
#      client requests.
#
#  Type of value:
#      [IP-Address]:Port
#      [Hostname]:Port
#
#  Default value:
#      127.0.0.1:8118
#
#  Effect if unset:
#      Bind to 127.0.0.1 (IPv4 localhost), port 8118. This is
#      suitable and recommended for home users who run Privoxy on the
#      same machine as their browser.
#
#  Notes:
#      You can use this statement multiple times to make Privoxy
#      listen on more ports or more IP addresses. Suitable if your
#      operating system does not support sharing IPv6 and IPv4
#      protocols on the same socket.
#
#      IPv6 addresses containing colons have to be quoted by
#      brackets. They can only be used if Privoxy has been compiled
#      with IPv6 support. If you aren't sure if your version supports
#      it, have a look at http://config.privoxy.org/show-status.
#
#      Some operating systems will prefer IPv6 to IPv4 addresses even
#      if the system has no IPv6 connectivity which is usually not
#      expected by the user. Some even rely on DNS to resolve
#      localhost which mean the "localhost" address used may not
#      actually be local.
#      It is therefore recommended to explicitly configure the
#      intended IP address instead of relying on the operating
#      system, unless there's a strong reason not to.
#
#      If you leave out the address, Privoxy will bind to all IPv4
#      interfaces (addresses) on your machine and may become
#      reachable from the Internet and/or the local network. Be aware
#      that some GNU/Linux distributions modify that behaviour
#      without updating the documentation. Check for non-standard
#      patches if your Privoxy version behaves differently.
#
#      If you configure Privoxy to be reachable from the network,
#      consider using access control lists (ACL's, see below), and/or
#      a firewall.
#
#      If you open Privoxy to untrusted users, you will also want to
#      make sure that the following actions are disabled:
#      enable-edit-actions and enable-remote-toggle
#
#  Example:
#
#      Suppose you are running Privoxy on an IPv6-capable machine and
#      you want it to listen on the IPv6 address of the loopback
#      device:
#
#        listen-address [::1]:8118
#
listen-address  172.27.24.40:50506
#
#  4.2. toggle
#  ============
#
#  Specifies:
#      Initial state of "toggle" status
#
#  Type of value:
#      1 or 0
#
#  Default value:
#      1
#
#  Effect if unset:
#      Act as if toggled on
#
#  Notes:
#      If set to 0, Privoxy will start in "toggled off" mode, i.e.
#      mostly behave like a normal, content-neutral proxy with both
#      ad blocking and content filtering disabled. See
#      enable-remote-toggle below.
#
toggle  1
#
#  4.3. enable-remote-toggle
#  ==========================
#
#  Specifies:
#      Whether or not the web-based toggle feature may be used
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      The web-based toggle feature is disabled.
#
#  Notes:
#      When toggled off, Privoxy mostly acts like a normal,
#      content-neutral proxy, i.e. doesn't block ads or filter
#      content.
#
#      Access to the toggle feature can not be controlled separately
#      by "ACLs" or HTTP authentication, so that everybody who can
#      access Privoxy (see "ACLs" and listen-address above) can
#      toggle it for all users. So this option is not recommended for
#      multi-user environments with untrusted users.
#
#      Note that malicious client side code (e.g Java) is also
#      capable of using this option.
#
#      As a lot of Privoxy users don't read documentation, this
#      feature is disabled by default.
#
#      Note that you must have compiled Privoxy with support for this
#      feature, otherwise this option has no effect.
#
enable-remote-toggle  0
#
#  4.4. enable-remote-http-toggle
#  ===============================
#
#  Specifies:
#      Whether or not Privoxy recognizes special HTTP headers to
#      change its behaviour.
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      Privoxy ignores special HTTP headers.
#
#  Notes:
#      When toggled on, the client can change Privoxy's behaviour by
#      setting special HTTP headers. Currently the only supported
#      special header is "X-Filter: No", to disable filtering for the
#      ongoing request, even if it is enabled in one of the action
#      files.
#
#      This feature is disabled by default. If you are using Privoxy
#      in a environment with trusted clients, you may enable this
#      feature at your discretion. Note that malicious client side
#      code (e.g Java) is also capable of using this feature.
#
#      This option will be removed in future releases as it has been
#      obsoleted by the more general header taggers.
#
enable-remote-http-toggle  0
#
#  4.5. enable-edit-actions
#  =========================
#
#  Specifies:
#      Whether or not the web-based actions file editor may be used
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      The web-based actions file editor is disabled.
#
#  Notes:
#      Access to the editor can not be controlled separately by
#      "ACLs" or HTTP authentication, so that everybody who can
#      access Privoxy (see "ACLs" and listen-address above) can
#      modify its configuration for all users.
#
#      This option is not recommended for environments with untrusted
#      users and as a lot of Privoxy users don't read documentation,
#      this feature is disabled by default.
#
#      Note that malicious client side code (e.g Java) is also
#      capable of using the actions editor and you shouldn't enable
#      this options unless you understand the consequences and are
#      sure your browser is configured correctly.
#
#      Note that you must have compiled Privoxy with support for this
#      feature, otherwise this option has no effect.
#
enable-edit-actions 0
#
#  4.6. enforce-blocks
#  ====================
#
#  Specifies:
#      Whether the user is allowed to ignore blocks and can "go there
#      anyway".
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      Blocks are not enforced.
#
#  Notes:
#      Privoxy is mainly used to block and filter requests as a
#      service to the user, for example to block ads and other junk
#      that clogs the pipes. Privoxy's configuration isn't perfect
#      and sometimes innocent pages are blocked. In this situation it
#      makes sense to allow the user to enforce the request and have
#      Privoxy ignore the block.
#
#      In the default configuration Privoxy's "Blocked" page contains
#      a "go there anyway" link to adds a special string (the force
#      prefix) to the request URL. If that link is used, Privoxy will
#      detect the force prefix, remove it again and let the request
#      pass.
#
#      Of course Privoxy can also be used to enforce a network
#      policy. In that case the user obviously should not be able to
#      bypass any blocks, and that's what the "enforce-blocks" option
#      is for. If it's enabled, Privoxy hides the "go there anyway"
#      link. If the user adds the force prefix by hand, it will not
#      be accepted and the circumvention attempt is logged.
#
#  Example:
#      enforce-blocks 1
#
enforce-blocks 0
#
#  4.7. ACLs: permit-access and deny-access
#  =========================================
#
#  Specifies:
#      Who can access what.
#
#  Type of value:
#      src_addr[:port][/src_masklen] [dst_addr[:port][/dst_masklen]]
#
#      Where src_addr and dst_addr are IPv4 addresses in dotted
#      decimal notation or valid DNS names, port is a port number,
#      and src_masklen and dst_masklen are subnet masks in CIDR
#      notation, i.e. integer values from 2 to 30 representing the
#      length (in bits) of the network address. The masks and the
#      whole destination part are optional.
#
#      If your system implements RFC 3493, then src_addr and dst_addr
#      can be IPv6 addresses delimited by brackets, port can be a
#      number or a service name, and src_masklen and dst_masklen can
#      be a number from 0 to 128.
#
#  Default value:
#      Unset
#
#      If no port is specified, any port will match. If no
#      src_masklen or src_masklen is given, the complete IP address
#      has to match (i.e. 32 bits for IPv4 and 128 bits for IPv6).
#
#  Effect if unset:
#      Don't restrict access further than implied by listen-address
#
#  Notes:
#
#      Access controls are included at the request of ISPs and
#      systems administrators, and are not usually needed by
#      individual users. For a typical home user, it will normally
#      suffice to ensure that Privoxy only listens on the localhost
#      (127.0.0.1) or internal (home) network address by means of the
#      listen-address option.
#
#      Please see the warnings in the FAQ that Privoxy is not
#      intended to be a substitute for a firewall or to encourage
#      anyone to defer addressing basic security weaknesses.
#
#      Multiple ACL lines are OK. If any ACLs are specified, Privoxy
#      only talks to IP addresses that match at least one
#      permit-access line and don't match any subsequent deny-access
#      line. In other words, the last match wins, with the default
#      being deny-access.
#
#      If Privoxy is using a forwarder (see forward below) for a
#      particular destination URL, the dst_addr that is examined is
#      the address of the forwarder and NOT the address of the
#      ultimate target. This is necessary because it may be
#      impossible for the local Privoxy to determine the IP address
#      of the ultimate target (that's often what gateways are used
#      for).
#
#      You should prefer using IP addresses over DNS names, because
#      the address lookups take time. All DNS names must resolve! You
#      can not use domain patterns like "*.org" or partial domain
#      names. If a DNS name resolves to multiple IP addresses, only
#      the first one is used.
#
#      Some systems allow IPv4 clients to connect to IPv6 server
#      sockets. Then the client's IPv4 address will be translated by
#      the system into IPv6 address space with special prefix
#      ::ffff:0:0/96 (so called IPv4 mapped IPv6 address). Privoxy
#      can handle it and maps such ACL addresses automatically.
#
#      Denying access to particular sites by ACL may have undesired
#      side effects if the site in question is hosted on a machine
#      which also hosts other sites (most sites are).
#
#  Examples:
#
#      Explicitly define the default behavior if no ACL and
#      listen-address are set: "localhost" is OK. The absence of a
#      dst_addr implies that all destination addresses are OK:
#
#        permit-access  localhost
#
#      Allow any host on the same class C subnet as www.privoxy.org
#      access to nothing but www.example.com (or other domains hosted
#      on the same system):
#
#        permit-access  www.privoxy.org/24 www.example.com/32
#
#      Allow access from any host on the 26-bit subnet 192.168.45.64
#      to anywhere, with the exception that 192.168.45.73 may not
#      access the IP address behind www.dirty-stuff.example.com:
#
#        permit-access  192.168.45.64/26
#        deny-access    192.168.45.73    www.dirty-stuff.example.com
#
#      Allow access from the IPv4 network 192.0.2.0/24 even if
#      listening on an IPv6 wild card address (not supported on all
#      platforms):
#
#        permit-access  192.0.2.0/24
#
#      This is equivalent to the following line even if listening on
#      an IPv4 address (not supported on all platforms):
#
#        permit-access  [::ffff:192.0.2.0]/120
#
#
#  4.8. buffer-limit
#  ==================
#
#  Specifies:
#      Maximum size of the buffer for content filtering.
#
#  Type of value:
#      Size in Kbytes
#
#  Default value:
#      4096
#
#  Effect if unset:
#      Use a 4MB (4096 KB) limit.
#
#  Notes:
#      For content filtering, i.e. the +filter and +deanimate-gif
#      actions, it is necessary that Privoxy buffers the entire
#      document body. This can be potentially dangerous, since a
#      server could just keep sending data indefinitely and wait for
#      your RAM to exhaust -- with nasty consequences. Hence this
#      option.
#
#      When a document buffer size reaches the buffer-limit, it is
#      flushed to the client unfiltered and no further attempt to
#      filter the rest of the document is made. Remember that there
#      may be multiple threads running, which might require up to
#      buffer-limit Kbytes each, unless you have enabled
#      "single-threaded" above.
#
buffer-limit 4096
#
#  4.9. enable-proxy-authentication-forwarding
#  ============================================
#
#  Specifies:
#      Whether or not proxy authentication through Privoxy should
#      work.
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      Proxy authentication headers are removed.
#
#  Notes:
#      Privoxy itself does not support proxy authentication, but can
#      allow clients to authenticate against Privoxy's parent proxy.
#
#      Enabling this option is not recommended if there is no parent
#      proxy that requires authentication or if the local network
#      between Privoxy and the parent proxy isn't trustworthy. If
#      proxy authentication is only required for some requests, it is
#      recommended to use a client header filter to remove the
#      authentication headers for requests where they aren't needed.
#
enable-proxy-authentication-forwarding 0
#
#  5. FORWARDING
#  ==============
#
#  This feature allows routing of HTTP requests through a chain of
#  multiple proxies.
#
#  Forwarding can be used to chain Privoxy with a caching proxy to
#  speed up browsing. Using a parent proxy may also be necessary if
#  the machine that Privoxy runs on has no direct Internet access.
#
#  Note that parent proxies can severely decrease your privacy level.
#  For example a parent proxy could add your IP address to the
#  request headers and if it's a caching proxy it may add the "Etag"
#  header to revalidation requests again, even though you configured
#  Privoxy to remove it. It may also ignore Privoxy's header time
#  randomization and use the original values which could be used by
#  the server as cookie replacement to track your steps between
#  visits.
#
#  Also specified here are SOCKS proxies. Privoxy supports the SOCKS
#  4 and SOCKS 4A protocols.
#
#
#  5.1. forward
#  =============
#
#  Specifies:
#
#      To which parent HTTP proxy specific requests should be routed.
#
#  Type of value:
#
#      target_pattern http_parent[:port]
#
#      where target_pattern is a URL pattern that specifies to which
#      requests (i.e. URLs) this forward rule shall apply. Use / to
#      denote "all URLs". http_parent[:port] is the DNS name or IP
#      address of the parent HTTP proxy through which the requests
#      should be forwarded, optionally followed by its listening port
#      (default: 8000). Use a single dot (.) to denote "no
#      forwarding".
#
#  Default value:
#
#      Unset
#
#  Effect if unset:
#
#      Don't use parent HTTP proxies.
#
#  Notes:
#
#      If http_parent is ".", then requests are not forwarded to
#      another HTTP proxy but are made directly to the web servers.
#
#      http_parent can be a numerical IPv6 address (if RFC 3493 is
#      implemented). To prevent clashes with the port delimiter, the
#      whole IP address has to be put into brackets. On the other
#      hand a target_pattern containing an IPv6 address has to be put
#      into angle brackets (normal brackets are reserved for regular
#      expressions already).
#
#      Multiple lines are OK, they are checked in sequence, and the
#      last match wins.
#
#  Examples:
#
#      Everything goes to an example parent proxy, except SSL on port
#      443 (which it doesn't handle):
#
#        forward   /      parent-proxy.example.org:8080
#        forward   :443   .
#
#      Everything goes to our example ISP's caching proxy, except for
#      requests to that ISP's sites:
#
#        forward   /                  caching-proxy.isp.example.net:8000
#        forward   .isp.example.net   .
#
#      Parent proxy specified by an IPv6 address:
#
#        forward   /                   [2001:DB8::1]:8000
#
#      Suppose your parent proxy doesn't support IPv6:
#
#        forward  /                        parent-proxy.example.org:8000
#        forward  ipv6-server.example.org  .
#        forward  <[2-3][0-9a-f][0-9a-f][0-9a-f]:*>   .
#
#
#  5.2. forward-socks4, forward-socks4a, forward-socks5 and forward-socks5t
#  =========================================================================
#
#  Specifies:
#
#      Through which SOCKS proxy (and optionally to which parent HTTP
#      proxy) specific requests should be routed.
#
#  Type of value:
#
#      target_pattern [user:pass@]socks_proxy[:port] http_parent[:port]
#
#      where target_pattern is a URL pattern that specifies to which
#      requests (i.e. URLs) this forward rule shall apply. Use / to
#      denote "all URLs". http_parent and socks_proxy are IP
#      addresses in dotted decimal notation or valid DNS names (
#      http_parent may be "." to denote "no HTTP forwarding"), and
#      the optional port parameters are TCP ports, i.e. integer
#      values from 1 to 65535. user and pass can be used for SOCKS5
#      authentication if required.
#
#  Default value:
#
#      Unset
#
#  Effect if unset:
#
#      Don't use SOCKS proxies.
#
#  Notes:
#
#      Multiple lines are OK, they are checked in sequence, and the
#      last match wins.
#
#      The difference between forward-socks4 and forward-socks4a is
#      that in the SOCKS 4A protocol, the DNS resolution of the
#      target hostname happens on the SOCKS server, while in SOCKS 4
#      it happens locally.
#
#      With forward-socks5 the DNS resolution will happen on the
#      remote server as well.
#
#      forward-socks5t works like vanilla forward-socks5 but lets
#      Privoxy additionally use Tor-specific SOCKS extensions.
#      Currently the only supported SOCKS extension is optimistic
#      data which can reduce the latency for the first request made
#      on a newly created connection.
#
#      socks_proxy and http_parent can be a numerical IPv6 address
#      (if RFC 3493 is implemented). To prevent clashes with the port
#      delimiter, the whole IP address has to be put into brackets.
#      On the other hand a target_pattern containing an IPv6 address
#      has to be put into angle brackets (normal brackets are
#      reserved for regular expressions already).
#
#      If http_parent is ".", then requests are not forwarded to
#      another HTTP proxy but are made (HTTP-wise) directly to the
#      web servers, albeit through a SOCKS proxy.
#
#  Examples:
#
#      From the company example.com, direct connections are made to
#      all "internal" domains, but everything outbound goes through
#      their ISP's proxy by way of example.com's corporate SOCKS 4A
#      gateway to the Internet.
#
#        forward-socks4a   /              socks-gw.example.com:1080  www-cache.isp.example.net:8080
#        forward           .example.com   .
#
#      A rule that uses a SOCKS 4 gateway for all destinations but no
#      HTTP parent looks like this:
#
#        forward-socks4   /               socks-gw.example.com:1080  .
#
#      To connect SOCKS5 proxy which requires username/password
#      authentication:
#
#        forward-socks5   /               user:pass@socks-gw.example.com:1080  .
#
#      To chain Privoxy and Tor, both running on the same system, you
#      would use something like:
#
#        forward-socks5t   /               127.0.0.1:9050 .
#
#      Note that if you got Tor through one of the bundles, you may
#      have to change the port from 9050 to 9150 (or even another
#      one). For details, please check the documentation on the Tor
#      website.
#
#      The public Tor network can't be used to reach your local
#      network, if you need to access local servers you therefore
#      might want to make some exceptions:
#
#        forward         192.168.*.*/     .
#        forward            10.*.*.*/     .
#        forward           127.*.*.*/     .
#
#      Unencrypted connections to systems in these address ranges
#      will be as (un)secure as the local network is, but the
#      alternative is that you can't reach the local network through
#      Privoxy at all. Of course this may actually be desired and
#      there is no reason to make these exceptions if you aren't sure
#      you need them.
#
#      If you also want to be able to reach servers in your local
#      network by using their names, you will need additional
#      exceptions that look like this:
#
forward .i2p localhost:4444
forward .ygg localhost:4444
#
#
#  5.3. forwarded-connect-retries
#  ===============================
#
#  Specifies:
#
#      How often Privoxy retries if a forwarded connection request
#      fails.
#
#  Type of value:
#
#      Number of retries.
#
#  Default value:
#
#      0
#
#  Effect if unset:
#
#      Connections forwarded through other proxies are treated like
#      direct connections and no retry attempts are made.
#
#  Notes:
#
#      forwarded-connect-retries is mainly interesting for socks4a
#      connections, where Privoxy can't detect why the connections
#      failed. The connection might have failed because of a DNS
#      timeout in which case a retry makes sense, but it might also
#      have failed because the server doesn't exist or isn't
#      reachable. In this case the retry will just delay the
#      appearance of Privoxy's error message.
#
#      Note that in the context of this option, "forwarded
#      connections" includes all connections that Privoxy forwards
#      through other proxies. This option is not limited to the HTTP
#      CONNECT method.
#
#      Only use this option, if you are getting lots of
#      forwarding-related error messages that go away when you try
#      again manually. Start with a small value and check Privoxy's
#      logfile from time to time, to see how many retries are usually
#      needed.
#
#  Example:
#
#      forwarded-connect-retries 1
#
forwarded-connect-retries  0
#
#  6. MISCELLANEOUS
#  =================
#
#  6.1. accept-intercepted-requests
#  =================================
#
#  Specifies:
#      Whether intercepted requests should be treated as valid.
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      Only proxy requests are accepted, intercepted requests are
#      treated as invalid.
#
#  Notes:
#      If you don't trust your clients and want to force them to use
#      Privoxy, enable this option and configure your packet filter
#      to redirect outgoing HTTP connections into Privoxy.
#
#      Note that intercepting encrypted connections (HTTPS) isn't
#      supported.
#
#      Make sure that Privoxy's own requests aren't redirected as
#      well. Additionally take care that Privoxy can't intentionally
#      connect to itself, otherwise you could run into redirection
#      loops if Privoxy's listening port is reachable by the outside
#      or an attacker has access to the pages you visit.
#
#      If you are running Privoxy as intercepting proxy without being
#      able to intercept all client requests you may want to adjust
#      the CGI templates to make sure they don't reference content
#      from config.privoxy.org.
#
#  Example:
#      accept-intercepted-requests 1
#
accept-intercepted-requests 0
#
#  6.2. allow-cgi-request-crunching
#  =================================
#
#  Specifies:
#      Whether requests to Privoxy's CGI pages can be blocked or
#      redirected.
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      Privoxy ignores block and redirect actions for its CGI pages.
#
#  Notes:
#      By default Privoxy ignores block or redirect actions for its
#      CGI pages. Intercepting these requests can be useful in
#      multi-user setups to implement fine-grained access control,
#      but it can also render the complete web interface useless and
#      make debugging problems painful if done without care.
#
#      Don't enable this option unless you're sure that you really
#      need it.
#
#  Example:
#      allow-cgi-request-crunching 1
#
allow-cgi-request-crunching 0
#
#  6.3. split-large-forms
#  =======================
#
#  Specifies:
#      Whether the CGI interface should stay compatible with broken
#      HTTP clients.
#
#  Type of value:
#      0 or 1
#
#  Default value:
#      0
#
#  Effect if unset:
#      The CGI form generate long GET URLs.
#
#  Notes:
#      Privoxy's CGI forms can lead to rather long URLs. This isn't a
#      problem as far as the HTTP standard is concerned, but it can
#      confuse clients with arbitrary URL length limitations.
#
#      Enabling split-large-forms causes Privoxy to divide big forms
#      into smaller ones to keep the URL length down. It makes
#      editing a lot less convenient and you can no longer submit all
#      changes at once, but at least it works around this browser
#      bug.
#
#      If you don't notice any editing problems, there is no reason
#      to enable this option, but if one of the submit buttons
#      appears to be broken, you should give it a try.
#
#  Example:
#      split-large-forms 1
#
split-large-forms 0
#
#  6.4. keep-alive-timeout
#  ========================
#
#  Specifies:
#      Number of seconds after which an open connection will no
#      longer be reused.
#
#  Type of value:
#      Time in seconds.
#
#  Default value:
#      None
#
#  Effect if unset:
#      Connections are not kept alive.
#
#  Notes:
#      This option allows clients to keep the connection to Privoxy
#      alive. If the server supports it, Privoxy will keep the
#      connection to the server alive as well. Under certain
#      circumstances this may result in speed-ups.
#
#      By default, Privoxy will close the connection to the server if
#      the client connection gets closed, or if the specified timeout
#      has been reached without a new request coming in. This
#      behaviour can be changed with the connection-sharing option.
#
#      This option has no effect if Privoxy has been compiled without
#      keep-alive support.
#
#      Note that a timeout of five seconds as used in the default
#      configuration file significantly decreases the number of
#      connections that will be reused. The value is used because
#      some browsers limit the number of connections they open to a
#      single host and apply the same limit to proxies. This can
#      result in a single website "grabbing" all the connections the
#      browser allows, which means connections to other websites
#      can't be opened until the connections currently in use time
#      out.
#
#      Several users have reported this as a Privoxy bug, so the
#      default value has been reduced. Consider increasing it to 300
#      seconds or even more if you think your browser can handle it.
#      If your browser appears to be hanging, it probably can't.
#
#  Example:
#      keep-alive-timeout 300
#
keep-alive-timeout 5
#
#  6.5. tolerate-pipelining
#  =========================
#
#  Specifies:
#      Whether or not pipelined requests should be served.
#
#  Type of value:
#      0 or 1.
#
#  Default value:
#      None
#
#  Effect if unset:
#      If Privoxy receives more than one request at once, it
#      terminates the client connection after serving the first one.
#
#  Notes:
#      Privoxy currently doesn't pipeline outgoing requests, thus
#      allowing pipelining on the client connection is not guaranteed
#      to improve the performance.
#
#      By default Privoxy tries to discourage clients from pipelining
#      by discarding aggressively pipelined requests, which forces
#      the client to resend them through a new connection.
#
#      This option lets Privoxy tolerate pipelining. Whether or not
#      that improves performance mainly depends on the client
#      configuration.
#
#      If you are seeing problems with pages not properly loading,
#      disabling this option could work around the problem.
#
#  Example:
#      tolerate-pipelining 1
#
tolerate-pipelining 1
#
#  6.8. socket-timeout
#  ====================
#
#  Specifies:
#      Number of seconds after which a socket times out if no data is
#      received.
#
#  Type of value:
#      Time in seconds.
#
#  Default value:
#      None
#
#  Effect if unset:
#      A default value of 300 seconds is used.
#
#  Notes:
#      The default is quite high and you probably want to reduce it.
#      If you aren't using an occasionally slow proxy like Tor,
#      reducing it to a few seconds should be fine.
#
#  Example:
#      socket-timeout 300
#
socket-timeout 300
#
#  6.9. max-client-connections
#  ============================
#
#  Specifies:
#      Maximum number of client connections that will be served.
#
#  Type of value:
#      Positive number.
#
#  Default value:
#      128
#
#  Effect if unset:
#      Connections are served until a resource limit is reached.
#
#  Notes:
#      Privoxy creates one thread (or process) for every incoming
#      client connection that isn't rejected based on the access
#      control settings.
#
#      If the system is powerful enough, Privoxy can theoretically
#      deal with several hundred (or thousand) connections at the
#      same time, but some operating systems enforce resource limits
#      by shutting down offending processes and their default limits
#      may be below the ones Privoxy would require under heavy load.
#
#      Configuring Privoxy to enforce a connection limit below the
#      thread or process limit used by the operating system makes
#      sure this doesn't happen. Simply increasing the operating
#      system's limit would work too, but if Privoxy isn't the only
#      application running on the system, you may actually want to
#      limit the resources used by Privoxy.
#
#      If Privoxy is only used by a single trusted user, limiting the
#      number of client connections is probably unnecessary. If there
#      are multiple possibly untrusted users you probably still want
#      to additionally use a packet filter to limit the maximal
#      number of incoming connections per client. Otherwise a
#      malicious user could intentionally create a high number of
#      connections to prevent other users from using Privoxy.
#
#      Obviously using this option only makes sense if you choose a
#      limit below the one enforced by the operating system.
#
#      One most POSIX-compliant systems Privoxy can't properly deal
#      with more than FD_SETSIZE file descriptors at the same time
#      and has to reject connections if the limit is reached. This
#      will likely change in a future version, but currently this
#      limit can't be increased without recompiling Privoxy with a
#      different FD_SETSIZE limit.
#
max-client-connections 128
#
#  6.18. trust-x-forwarded-for
#  ============================
#
#  Specifies:
#      Whether or not Privoxy should use IP addresses specified with
#      the X-Forwarded-For header
#
#  Type of value:
#      0 or one
#
#  Default value:
#      0
#
#  Notes:
#      If clients reach Privoxy through another proxy, for example a
#      load balancer, Privoxy can't tell the client's IP address from
#      the connection. If multiple clients use the same proxy, they
#      will share the same client tag settings which is usually not
#      desired.
#
#      This option lets Privoxy use the X-Forwarded-For header value
#      as client IP address. If the proxy sets the header, multiple
#      clients using the same proxy do not share the same client tag
#      settings.
#
#      This option should only be enabled if Privoxy can only be
#      reached through a proxy and if the proxy can be trusted to set
#      the header correctly. It is recommended that ACL are used to
#      make sure only trusted systems can reach Privoxy.
#
#      If access to Privoxy isn't limited to trusted systems, this
#      option would allow malicious clients to change the client tags
#      for other clients or increase Privoxy's memory requirements by
#      registering lots of client tag settings for clients that don't
#      exist.
#
#  Example:
#            # Allow systems that can reach Privoxy to provide the client
#            # IP address with a X-Forwarded-For header.
trust-x-forwarded-for 1
#
#  6.19. receive-buffer-size
#  ==========================
#
#  Specifies:
#      The size of the buffer Privoxy uses to receive data from the
#      server.
#
#  Type of value:
#      Size in bytes
#
#  Default value:
#      5000
#
#  Notes:
#      Increasing the receive-buffer-size increases Privoxy's memory
#      usage but can lower the number of context switches and thereby
#      reduce the cpu usage and potentially increase the throughput.
#
#      This is mostly relevant for fast network connections and large
#      downloads that don't require filtering.
#
#      Reducing the buffer size reduces the amount of memory Privoxy
#      needs to handle the request but increases the number of
#      systemcalls and may reduce the throughput.
#
#      A dtrace command like: "sudo dtrace -n 'syscall::read:return /
#      execname == "privoxy"/ { @[execname] = llquantize(arg0, 10, 0,
#      5, 20); @m = max(arg0)}'" can be used to properly tune the
#      receive-buffer-size. On systems without dtrace, strace or
#      truss may be used as less convenient alternatives.
#
#      If the buffer is too large it will increase Privoxy's memory
#      footprint without any benefit. As the memory is (currently)
#      cleared before using it, a buffer that is too large can
#      actually reduce the throughput.
#
#  Example:
#            # Increase the receive buffer size
#            receive-buffer-size 32768
#
#  7.6. cipher-list
#  =================
#
#  Specifies:
#
#      A list of ciphers to use in TLS handshakes
#
#  Type of value:
#
#      Text
#
#  Default value:
#
#      None
#
#  Effect if unset:
#
#      A default value is inherited from the TLS library.
#
#  Notes:
#
#      This directive allows to specify a non-default list of ciphers
#      to use in TLS handshakes with clients and servers.
#
#      Ciphers are separated by colons. Which ciphers are supported
#      depends on the TLS library. When using OpenSSL, unsupported
#      ciphers are skipped. When using MbedTLS they are rejected.
#
#      +-----------------------------------------------------+
#      |                       Warning                       |
#      |-----------------------------------------------------|
#      |Specifying an unusual cipher list makes              |
#      |fingerprinting easier. Note that the default list    |
#      |provided by the TLS library may be unusual when      |
#      |compared to the one used by modern browsers as well. |
#      +-----------------------------------------------------+
#  Examples:
#
#          # Explicitly set a couple of ciphers with names used by MbedTLS
#          cipher-list cipher-list TLS-ECDHE-RSA-WITH-CHACHA20-POLY1305-SHA256:\
#          TLS-ECDHE-ECDSA-WITH-CHACHA20-POLY1305-SHA256:\
#          TLS-DHE-RSA-WITH-CHACHA20-POLY1305-SHA256:\
#          TLS-ECDHE-ECDSA-WITH-AES-128-GCM-SHA256:\
#          TLS-ECDHE-ECDSA-WITH-AES-256-GCM-SHA384:\
#          TLS-ECDHE-ECDSA-WITH-AES-256-CCM:\
#          TLS-ECDHE-ECDSA-WITH-AES-256-CCM-8:\
#          TLS-ECDHE-ECDSA-WITH-AES-128-CCM:\
#          TLS-ECDHE-ECDSA-WITH-AES-128-CCM-8:\
#          TLS-ECDHE-ECDSA-WITH-CAMELLIA-128-GCM-SHA256:\
#          TLS-ECDHE-ECDSA-WITH-CAMELLIA-256-GCM-SHA384:\
#          TLS-ECDHE-RSA-WITH-AES-128-GCM-SHA256:\
#          TLS-ECDHE-RSA-WITH-AES-256-GCM-SHA384:\
#          TLS-ECDHE-RSA-WITH-CAMELLIA-128-GCM-SHA256:\
#          TLS-ECDHE-RSA-WITH-CAMELLIA-256-GCM-SHA384:\
#          TLS-DHE-RSA-WITH-AES-256-GCM-SHA384:\
#          TLS-DHE-RSA-WITH-AES-128-GCM-SHA256:\
#          TLS-DHE-RSA-WITH-AES-256-CCM:\
#          TLS-DHE-RSA-WITH-AES-256-CCM-8:\
#          TLS-DHE-RSA-WITH-AES-128-CCM:\
#          TLS-DHE-RSA-WITH-AES-128-CCM-8:\
#          TLS-DHE-RSA-WITH-CAMELLIA-128-GCM-SHA256:\
#          TLS-DHE-RSA-WITH-CAMELLIA-256-GCM-SHA384:\
#          TLS-ECDH-RSA-WITH-AES-128-GCM-SHA256:\
#          TLS-ECDH-RSA-WITH-AES-256-GCM-SHA384:\
#          TLS-ECDH-RSA-WITH-CAMELLIA-128-GCM-SHA256:\
#          TLS-ECDH-RSA-WITH-CAMELLIA-256-GCM-SHA384:\
#          TLS-ECDH-ECDSA-WITH-AES-128-GCM-SHA256:\
#          TLS-ECDH-ECDSA-WITH-AES-256-GCM-SHA384:\
#          TLS-ECDH-ECDSA-WITH-CAMELLIA-128-GCM-SHA256:\
#          TLS-ECDH-ECDSA-WITH-CAMELLIA-256-GCM-SHA384
#
#
#          # Explicitly set a couple of ciphers with names used by OpenSSL
#          cipher-list ECDHE-RSA-AES256-GCM-SHA384:\
#          ECDHE-ECDSA-AES256-GCM-SHA384:\
#          DH-DSS-AES256-GCM-SHA384:\
#          DHE-DSS-AES256-GCM-SHA384:\
#          DH-RSA-AES256-GCM-SHA384:\
#          DHE-RSA-AES256-GCM-SHA384:\
#          ECDH-RSA-AES256-GCM-SHA384:\
#          ECDH-ECDSA-AES256-GCM-SHA384:\
#          ECDHE-RSA-AES128-GCM-SHA256:\
#          ECDHE-ECDSA-AES128-GCM-SHA256:\
#          DH-DSS-AES128-GCM-SHA256:\
#          DHE-DSS-AES128-GCM-SHA256:\
#          DH-RSA-AES128-GCM-SHA256:\
#          DHE-RSA-AES128-GCM-SHA256:\
#          ECDH-RSA-AES128-GCM-SHA256:\
#          ECDH-ECDSA-AES128-GCM-SHA256:\
#          ECDHE-RSA-AES256-GCM-SHA384:\
#          AES128-SHA
#
#
#          # Use keywords instead of explicitly naming the ciphers (Does not work with MbedTLS)
#          cipher-list ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH
#
